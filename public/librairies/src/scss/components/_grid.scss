$grid__bp-sm: 576;
$grid__bp-md: 768;
$grid__bp-lg: 992;
$grid__bp-xl: 1200;
$grid__cols: 12;
$gutter_width:30px;

$map-grid-props: (
        '': 0,
        '-sm': $grid__bp-sm,
        '-md': $grid__bp-md,
        '-lg': $grid__bp-lg,
        '-xl': $grid__bp-xl
);

@mixin create-mq($breakpoint, $min-or-max) {
    @if($breakpoint == 0) {
        @content;
    } @else {
        @media screen and (#{$min-or-max}-width: $breakpoint *1px) {
            @content;
        }
    }
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
    @include create-mq($breakpoint, 'max') {
        &#{$modifier}-offset-0 {
            margin-left: 0;
        }
        @for $i from 1 through $grid-cols {
            &#{$modifier}-#{$i} {
                flex-basis: (100 / ($grid-cols / $i) ) * 1%;
            }
            &#{$modifier}-offset-#{$i} {
                flex-basis: (100 / ($grid-cols / $i) ) * 1%;
                margin-left: (100 / ($grid-cols / $i) ) * 1%;
            }
            &#{$modifier}-gutter-#{$i}{
                flex-basis: (100 / ($grid-cols / $i) ) * 1%;
                padding: 0 ($gutter-width / 2) ;
            }
        }
    }
}

@each $modifier , $breakpoint in $map-grid-props {
    @if($modifier == '') {
        $modifier: '-xs';
    }
    @include create-mq($breakpoint - 1, 'max') {
        .hidden#{$modifier}-down {
            display: none !important;
        }
    }
    @include create-mq($breakpoint, 'min') {
        .hidden#{$modifier}-up {
            display: none !important;
        }
    }
}

.container {
    max-width: $grid__bp-md * 1px;
    margin: 0 auto;
    &--fluid {
        margin: 0;
        max-width: 100%;
    }
}

.row{
    display: flex;
    position: relative;
    //flex-wrap: wrap;
    width: 100%;
    margin-left: 0px;
}

.col{
    @each $modifier , $breakpoint in $map-grid-props {
        @include create-col-classes($modifier, $grid__cols, $breakpoint);
    }
}